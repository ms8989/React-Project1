{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\react\\\\first-app\\\\src\\\\Component\\\\ContactList.tsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.upDateEvent = contact => {\n      this.props.sendData(contact);\n    };\n\n    this.state = {\n      contacts: []\n    };\n  } //loading\n\n\n  componentDidMount() {\n    let dataURL = 'https://gist.github.com/ms8989/52cf66b575786a95f571965d521f3fe1';\n    axios.get(dataURL).then(response => {\n      this.setState({\n        contacts: response.data\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  } //updateEvent\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"bg-primary text-white\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"SNO\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"NAME\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"EMAIL\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ADDRESS\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"GENDER\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"PHONE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: this.state.contacts.length > 0 && this.state.contacts.map(contact => {\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    onClick: this.upDateEvent.bind(this, contact),\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\nexport default ContactList;","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/react/first-app/src/Component/ContactList.tsx"],"names":["React","axios","ContactList","Component","constructor","props","upDateEvent","contact","sendData","state","contacts","componentDidMount","dataURL","get","then","response","setState","data","catch","error","console","render","length","map","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAmC,OAAnC;;;AASA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CACA;AAEIC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;;AADJ,SAyBIC,WAzBJ,GAyBiBC,OAAD,IACZ;AACI,WAAKF,KAAL,CAAWG,QAAX,CAAoBD,OAApB;AACH,KA5BL;;AAEI,SAAKE,KAAL,GAAW;AACEC,MAAAA,QAAQ,EAAE;AADZ,KAAX;AAIC,GATT,CAWQ;;;AACAC,EAAAA,iBAAiB,GAAO;AACpB,QAAIC,OAAc,GAAC,iEAAnB;AACAX,IAAAA,KAAK,CAACY,GAAN,CAAUD,OAAV,EAAmBE,IAAnB,CAAyBC,QAAD,IACxB;AACC,WAAKC,QAAL,CACI;AACIN,QAAAA,QAAQ,EAACK,QAAQ,CAACE;AADtB,OADJ;AAKA,KAPD,EAOGC,KAPH,CAOUC,KAAD,IACT;AACIC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,KAVD;AAWH,GAzBT,CA2BQ;;;AASRE,EAAAA,MAAM,GACN;AAEA,wBAEA,QAAC,KAAD,CAAO,QAAP;AAAA,6BACA;AAAS,QAAA,SAAS,EAAC,MAAnB;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI;AAAO,cAAA,SAAS,EAAC,uBAAjB;AAAA,sCACI;AAAA,uCACI;AAAA,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAWI;AAAA,0BAEQ,KAAKZ,KAAL,CAAWC,QAAX,CAAoBY,MAApB,GAA2B,CAA3B,IACA,KAAKb,KAAL,CAAWC,QAAX,CAAoBa,GAApB,CAAyBhB,OAAD,IACxB;AACI,sCACI;AAAI,oBAAA,OAAO,EAAE,KAAKD,WAAL,CAAiBkB,IAAjB,CAAsB,IAAtB,EAA2BjB,OAA3B,CAAb;AAAA,2CACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BADJ;AAKH,iBAPD;AAHR;AAAA;AAAA;AAAA;AAAA,sBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFA;AAqCC;;AA5ED;;AA8EA,eAAeL,WAAf","sourcesContent":["import React from 'react'\r\nimport {IContact} from './IContact'\r\nimport axios, {AxiosResponse} from 'axios'\r\n\r\ninterface IProps{\r\n    sendData:(value:IContact)=>void\r\n\r\n}\r\ninterface IState{\r\ncontacts:IContact[]\r\n}\r\nclass ContactList extends React.Component<IProps,IState>\r\n{\r\n\r\n    constructor(props:IProps)\r\n    {\r\n        super(props);\r\n        this.state={\r\n                     contacts: [] as IContact[]\r\n        }\r\n       \r\n        }\r\n        \r\n        //loading\r\n        componentDidMount():void{\r\n            let dataURL:string='https://gist.github.com/ms8989/52cf66b575786a95f571965d521f3fe1';\r\n            axios.get(dataURL).then((response:AxiosResponse<any>)=>\r\n            {\r\n             this.setState(\r\n                 {\r\n                     contacts:response.data\r\n                 }\r\n             )\r\n            }).catch((error)=>\r\n            {\r\n                console.error(error);\r\n            })\r\n        }\r\n        \r\n        //updateEvent\r\n        upDateEvent=(contact:any)=>\r\n        {\r\n            this.props.sendData(contact)\r\n        }\r\n    \r\n\r\n    \r\n\r\nrender()\r\n{\r\n    \r\nreturn(\r\n\r\n<React.Fragment>\r\n<section className='mt-3'>\r\n<div className='container'>\r\n    <div className='row'>\r\n        <table className='bg-primary text-white'>\r\n            <thead>\r\n                <tr>\r\n                    <th>SNO</th>\r\n                    <th>NAME</th>\r\n                    <th>EMAIL</th>\r\n                    <th>ADDRESS</th>\r\n                    <th>GENDER</th>\r\n                    <th>PHONE</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    this.state.contacts.length>0 &&\r\n                    this.state.contacts.map((contact)=>\r\n                    {\r\n                        return(\r\n                            <tr onClick={this.upDateEvent.bind(this,contact)}>\r\n                                <td></td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n</section>\r\n\r\n</React.Fragment>\r\n)\r\n}\r\n}\r\nexport default ContactList"]},"metadata":{},"sourceType":"module"}